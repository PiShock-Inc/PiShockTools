@page "/youtube"
@using StreamTools.Components.Models
@using StreamTools.Components.Models.Enums
@namespace StreamTools.Components.Pages


<MudContainer Fluid VerticalAlignment="VerticalAlignment.Middle" Flex="Flex.AlignContent.Center.JustifyContent.Center.Shrink.Is1">
    <MudTabs VerticalAlignment="VerticalAlignment.Top">
        <MudTabPanel Text="Account">
            <MudContainer Fluid VerticalAlignment="VerticalAlignment.Middle" Flex="Flex.AlignContent.Center.JustifyContent.Center.Shrink.Is1">
                <MudText> Connected to: %YTNAME%</MudText>
            </MudContainer>
            <MudContainer Fluid VerticalAlignment="VerticalAlignment.Middle" Flex="Flex.AlignContent.Center.JustifyContent.Center.Shrink.Is1">
                <MudButton Color="Color.Primary">Connect Youtube</MudButton>
            </MudContainer>
        </MudTabPanel>
        <MudTabPanel Text="Superchats">
            <MudContainer Fluid VerticalAlignment="VerticalAlignment.Default" Flex="Flex.AlignContent.Center.JustifyContent.Center.Shrink.Is1">
            </MudContainer>
            <MudButton Color="Color.Success" OnClick="SuperchatCreateRow">New</MudButton>
            <MudDataGrid @ref="superChatDatagrid" T="SuperChat" Items="@TestData" ReadOnly="false" EditMode="DataGridEditMode.Cell" EditTrigger="DataGridEditTrigger.OnRowClick" SortMode="SortMode.None">
                <Columns>
                    <PropertyColumn Property="x => x.Keyword" Required="false" />
                    <TemplateColumn>
                        <HeaderTemplate>
                            Shockers
                        </HeaderTemplate>
                        <CellTemplate >
                            <MudText>
                                @{
                                    var text = "";
                                    var value = context.Item.Shockers as List<Shocker> ?? [];

                                    if (!value.Any())
                                    {
                                    }
                                    if (value != null)
                                    {
                                        text = String.Join(", ", ((List<Shocker>)context.Item.Shockers).OrderBy(s => s.Name).Select(s => s.Name));
                                    }
                                    else
                                    {
                                        text = "Select shocker";

                                    }
                                    @text
                                }
                            </MudText>
                        </CellTemplate>
                        <EditTemplate>
                            <MudSelect T="Shocker" Label="Shockers" MultiSelection SelectedValues="@context.Item.Shockers.OrderBy(s => s.Name)" SelectedValuesChanged="(values) => OnShockerSelectItemsChanged(context.Item, values)" ToStringFunc="@((shocker) => shocker.Name)">
                                @foreach (Shocker shocker in TestShockers)
                                {
                                    <MudSelectItem Value="@shocker">@shocker.Name</MudSelectItem>
                                }
                            </MudSelect>
                        </EditTemplate>
                    </TemplateColumn>
                    <PropertyColumn Property="x => x.MinimumAmount">
                        <HeaderTemplate>
                            Minimum amount
                        </HeaderTemplate>
                    </PropertyColumn>
                    <TemplateColumn>
                        <HeaderTemplate>Operation method</HeaderTemplate>
                        <CellTemplate>
                            <MudText>@context.Item.Method.GetName()</MudText>
                        </CellTemplate>
                        <EditTemplate>

                            <MudSelect T="OperationMethod" @bind-Value="@context.Item.Method" Label="Operation" >
                                @foreach (OperationMethod method in Enum.GetValues(typeof(OperationMethod)))
                                {
                                    <MudSelectItem Value="method">@method.GetName()</MudSelectItem>
                                }
                            </MudSelect>
                        </EditTemplate>
                    </TemplateColumn>
                    <PropertyColumn Property="x => x.Intensity" />
                    <PropertyColumn Property="x => x.Duration" />
                    <PropertyColumn Property="x => x.Warning">
                        <EditTemplate>
                            <MudCheckBox @bind-Value="context.Item.Warning" Label="Warning" />
                        </EditTemplate>
                    </PropertyColumn>
                </Columns>
            </MudDataGrid>
        </MudTabPanel>
    </MudTabs>
</MudContainer>