// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using StreamTools.Data;

#nullable disable

namespace StreamTools.Migrations
{
    [DbContext(typeof(StreamToolsContext))]
    partial class StreamToolsContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "8.0.3");

            modelBuilder.Entity("StreamTools.Components.Models.Cheer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("Duration")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Intensity")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Keyword")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("Method")
                        .HasColumnType("INTEGER");

                    b.Property<int>("MinimumCheer")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("Warning")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.ToTable("Cheers", (string)null);
                });

            modelBuilder.Entity("StreamTools.Components.Models.Redeem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("Duration")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Intensity")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Method")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<bool>("Warning")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.ToTable("Redeems", (string)null);
                });

            modelBuilder.Entity("StreamTools.Components.Models.Shocker", b =>
                {
                    b.Property<string>("Code")
                        .HasMaxLength(15)
                        .HasColumnType("TEXT");

                    b.Property<int?>("CheerId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int?>("RedeemId")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("SuperChatId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Code");

                    b.HasIndex("CheerId");

                    b.HasIndex("RedeemId");

                    b.HasIndex("SuperChatId");

                    b.ToTable("Shockers", (string)null);
                });

            modelBuilder.Entity("StreamTools.Components.Models.SuperChat", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("Duration")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Intensity")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Keyword")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("Method")
                        .HasColumnType("INTEGER");

                    b.Property<int>("MinimumAmount")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("Warning")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.ToTable("Superchats", (string)null);
                });

            modelBuilder.Entity("StreamTools.Components.Models.Shocker", b =>
                {
                    b.HasOne("StreamTools.Components.Models.Cheer", null)
                        .WithMany("Shockers")
                        .HasForeignKey("CheerId");

                    b.HasOne("StreamTools.Components.Models.Redeem", null)
                        .WithMany("Shockers")
                        .HasForeignKey("RedeemId");

                    b.HasOne("StreamTools.Components.Models.SuperChat", null)
                        .WithMany("Shockers")
                        .HasForeignKey("SuperChatId");
                });

            modelBuilder.Entity("StreamTools.Components.Models.Cheer", b =>
                {
                    b.Navigation("Shockers");
                });

            modelBuilder.Entity("StreamTools.Components.Models.Redeem", b =>
                {
                    b.Navigation("Shockers");
                });

            modelBuilder.Entity("StreamTools.Components.Models.SuperChat", b =>
                {
                    b.Navigation("Shockers");
                });
#pragma warning restore 612, 618
        }
    }
}
